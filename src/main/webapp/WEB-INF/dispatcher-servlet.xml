<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--  SpringMVC扫描包隔离配置 不使用默认过滤器，而使用我们自己的来处理Controller  -->
    <context:component-scan base-package="com.mmall.controller" annotation-config="true" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
    </context:component-scan>

    <mvc:annotation-driven>
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/plain;charset=UTF-8</value>
                        <value>text/html;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
            <bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>application/json;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>


    <!-- 文件上传 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="10485760"/> <!-- 10m = 10485760 / (1024*1024) -->
        <property name="maxInMemorySize" value="4096"/>
        <property name="defaultEncoding" value="UTF-8"/>
    </bean>

    <!--  拦截器配置  -->
    <mvc:interceptors>
        <!--    定义在这里的，所有的都会拦截    -->
        <mvc:interceptor>
            <!--     manage/a.do -> /manage/*       -->
            <!--     manage/product/save.do -> /manage/**       -->
            <mvc:mapping path="/manage/**"/>

            <!--     自定义不使用拦截器的请求的第一种方法：       -->
            <!--     拦截器不能拦截login.do 否则用户要登录，但拦截器判断用户没有登录直接拦截       -->
            <!--     第二种方法在拦截器AuthorityInterceptor中定义，相比这一种方法灵活一些       -->
<!--            <mvc:exclude-mapping path="/manage/user/login.do" />-->

            <bean class="com.mmall.common.interceptor.AuthorityInterceptor" />
        </mvc:interceptor>
    </mvc:interceptors>


</beans>
